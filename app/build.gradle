plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.vfurkana.caselastfm"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_KEY", localProperties["lastFMApiKey"])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // App dependencies
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'

    // Using Retrofit for network requests. (Because Jake Wharton is cool)
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // Need interceptor. But okhttp won't hurt as well. 5.0.0-alpha available, but thanks, no alpha please.
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")
    // No need to hassle with request parsing. Gson will work for now. Converter factory is for combining with Retrofit.
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Using Hilt for Dependency injection
    // (Because Dagger is almost industry standard even though I have other favourite.
    // and Hilt helps to reduce boilerplate code over Dagger)
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-compiler:2.42"

    // For Concurrency
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"

    /**
     * We implement all those because Google doesn't want us to manage it ourselves.
     * Check {@link androidx.activity.ComponentActivity.class#onRetainNonConfigurationInstance()}
     * Actually all this view model survive thing is about {@link android.app.Activity.class#onRetainNonConfigurationInstance()}
     * We could implement it ourselves. But then how would Google... *uhm* Anyways here are the dependencies.
     */
    // Jetpack Things
    // Activity
    implementation "androidx.activity:activity-ktx:1.4.0"
    // Fragment
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.1"

    // Test Dependencies
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}